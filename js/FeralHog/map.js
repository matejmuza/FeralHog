// Generated by CoffeeScript 1.5.0
(function() {
  var _ref,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  if ((_ref = this.FeralHog) == null) {
    this.FeralHog = {};
  }

  FeralHog.Map = (function() {

    function Map() {
      this.toggleObservation = __bind(this.toggleObservation, this);
      var bounds, clusterer, clustererOptions, i, id, latlng, mapOptions, markersArray, obs, _i, _len, _ref1,
        _this = this;
      mapOptions = {
        center: new google.maps.LatLng(38.5, -92.5),
        zoom: 7,
        mapTypeId: google.maps.MapTypeId.TERRAIN,
        zoomControlOptions: {
          position: google.maps.ControlPosition.RIGHT_TOP
        },
        panControlOptions: {
          position: google.maps.ControlPosition.RIGHT_TOP
        }
      };
      this.map = new google.maps.Map(document.getElementById("map"), mapOptions);
      bounds = new google.maps.LatLngBounds();
      FeralHog.mapMarkers = [];
      markersArray = [];
      if (FeralHog.observations.models.length > 0) {
        _ref1 = FeralHog.observations.models;
        for (i = _i = 0, _len = _ref1.length; _i < _len; i = ++_i) {
          obs = _ref1[i];
          latlng = new google.maps.LatLng(obs.attributes.location.lat, obs.attributes.location.lon);
          bounds.extend(latlng);
          id = obs.id;
          FeralHog.mapMarkers[id] = new google.maps.Marker({
            position: latlng,
            map: this.map
          });
          google.maps.event.addListener(FeralHog.mapMarkers[id], "click", this.toggleObservation(id));
          markersArray.push(FeralHog.mapMarkers[id]);
        }
        this.map.fitBounds(bounds);
        clustererOptions = {
          maxZoom: 15
        };
        clusterer = new MarkerClusterer(this.map, markersArray, clustererOptions);
        google.maps.event.addListener(this.map, "click", function() {
          return FeralHog.router.navigate("", {
            trigger: true
          });
        });
      }
    }

    Map.prototype.toggleObservation = function(id, marker) {
      return function() {
        if (FeralHog.observations.selected === null || FeralHog.observations.selected !== id) {
          return FeralHog.router.navigate("observation/" + id + "/" + FeralHog.observations.defaultView, {
            trigger: true
          });
        } else {
          return FeralHog.router.navigate("", {
            trigger: true
          });
        }
      };
    };

    return Map;

  })();

}).call(this);
